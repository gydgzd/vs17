/* soapServer.cpp
   Generated by gSOAP 2.8.51 for service1.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapServer.cpp ver 2.8.51 2017-08-15 05:58:48 GMT")
extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap *soap)
{
#ifndef WITH_FASTCGI
	soap->keep_alive = soap->max_keep_alive + 1;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (soap->keep_alive > 0 && soap->max_keep_alive > 0)
			soap->keep_alive--;
#endif
		if (soap_begin_serve(soap))
		{	if (soap->error >= SOAP_STOP)
				continue;
			return soap->error;
		}
		if ((soap_serve_request(soap) || (soap->fserveloop && soap->fserveloop(soap))) && soap->error && soap->error < SOAP_STOP)
		{
#ifdef WITH_FASTCGI
			soap_send_fault(soap);
#else
			return soap_send_fault(soap);
#endif
		}
#ifdef WITH_FASTCGI
		soap_destroy(soap);
		soap_end(soap);
	} while (1);
#else
	} while (soap->keep_alive);
#endif
	return SOAP_OK;
}

#ifndef WITH_NOSERVEREQUEST
extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap *soap)
{
	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:deleteFiles"))
		return soap_serve___ns1__deleteFiles(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:createBucket"))
		return soap_serve___ns1__createBucket(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:deleteBucket"))
		return soap_serve___ns1__deleteBucket(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:doesBucketExists"))
		return soap_serve___ns1__doesBucketExists(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:getBucketNames"))
		return soap_serve___ns1__getBucketNames(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:getBucketFileNames"))
		return soap_serve___ns1__getBucketFileNames(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:doesFileExists"))
		return soap_serve___ns1__doesFileExists(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:getFileMessage"))
		return soap_serve___ns1__getFileMessage(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:getFileDetail"))
		return soap_serve___ns1__getFileDetail(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:deleteOneFile"))
		return soap_serve___ns1__deleteOneFile(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:deleteBatchFile"))
		return soap_serve___ns1__deleteBatchFile(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:deleteFileByName"))
		return soap_serve___ns1__deleteFileByName(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:uploadFile"))
		return soap_serve___ns1__uploadFile(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:downLoadFile"))
		return soap_serve___ns1__downLoadFile(soap);
	return soap->error = SOAP_NO_METHOD;
}
#endif

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__deleteFiles(struct soap *soap)
{	struct __ns1__deleteFiles soap_tmp___ns1__deleteFiles;
	ns1__deleteFilesResponse ns1__deleteFilesResponse_;
	ns1__deleteFilesResponse_.soap_default(soap);
	soap_default___ns1__deleteFiles(soap, &soap_tmp___ns1__deleteFiles);
	if (!soap_get___ns1__deleteFiles(soap, &soap_tmp___ns1__deleteFiles, "-ns1:deleteFiles", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__deleteFiles(soap, soap_tmp___ns1__deleteFiles.ns1__deleteFiles_, ns1__deleteFilesResponse_);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__deleteFilesResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__deleteFilesResponse_.soap_put(soap, "ns1:deleteFilesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__deleteFilesResponse_.soap_put(soap, "ns1:deleteFilesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__createBucket(struct soap *soap)
{	struct __ns1__createBucket soap_tmp___ns1__createBucket;
	ns1__createBucketResponse ns1__createBucketResponse_;
	ns1__createBucketResponse_.soap_default(soap);
	soap_default___ns1__createBucket(soap, &soap_tmp___ns1__createBucket);
	if (!soap_get___ns1__createBucket(soap, &soap_tmp___ns1__createBucket, "-ns1:createBucket", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__createBucket(soap, soap_tmp___ns1__createBucket.ns1__createBucket_, ns1__createBucketResponse_);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__createBucketResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__createBucketResponse_.soap_put(soap, "ns1:createBucketResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__createBucketResponse_.soap_put(soap, "ns1:createBucketResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__deleteBucket(struct soap *soap)
{	struct __ns1__deleteBucket soap_tmp___ns1__deleteBucket;
	ns1__deleteBucketResponse ns1__deleteBucketResponse_;
	ns1__deleteBucketResponse_.soap_default(soap);
	soap_default___ns1__deleteBucket(soap, &soap_tmp___ns1__deleteBucket);
	if (!soap_get___ns1__deleteBucket(soap, &soap_tmp___ns1__deleteBucket, "-ns1:deleteBucket", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__deleteBucket(soap, soap_tmp___ns1__deleteBucket.ns1__deleteBucket_, ns1__deleteBucketResponse_);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__deleteBucketResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__deleteBucketResponse_.soap_put(soap, "ns1:deleteBucketResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__deleteBucketResponse_.soap_put(soap, "ns1:deleteBucketResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__doesBucketExists(struct soap *soap)
{	struct __ns1__doesBucketExists soap_tmp___ns1__doesBucketExists;
	ns1__doesBucketExistsResponse ns1__doesBucketExistsResponse_;
	ns1__doesBucketExistsResponse_.soap_default(soap);
	soap_default___ns1__doesBucketExists(soap, &soap_tmp___ns1__doesBucketExists);
	if (!soap_get___ns1__doesBucketExists(soap, &soap_tmp___ns1__doesBucketExists, "-ns1:doesBucketExists", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__doesBucketExists(soap, soap_tmp___ns1__doesBucketExists.ns1__doesBucketExists_, ns1__doesBucketExistsResponse_);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__doesBucketExistsResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__doesBucketExistsResponse_.soap_put(soap, "ns1:doesBucketExistsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__doesBucketExistsResponse_.soap_put(soap, "ns1:doesBucketExistsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__getBucketNames(struct soap *soap)
{	struct __ns1__getBucketNames soap_tmp___ns1__getBucketNames;
	ns1__getBucketNamesResponse ns1__getBucketNamesResponse_;
	ns1__getBucketNamesResponse_.soap_default(soap);
	soap_default___ns1__getBucketNames(soap, &soap_tmp___ns1__getBucketNames);
	if (!soap_get___ns1__getBucketNames(soap, &soap_tmp___ns1__getBucketNames, "-ns1:getBucketNames", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__getBucketNames(soap, soap_tmp___ns1__getBucketNames.ns1__getBucketNames_, ns1__getBucketNamesResponse_);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__getBucketNamesResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getBucketNamesResponse_.soap_put(soap, "ns1:getBucketNamesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getBucketNamesResponse_.soap_put(soap, "ns1:getBucketNamesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__getBucketFileNames(struct soap *soap)
{	struct __ns1__getBucketFileNames soap_tmp___ns1__getBucketFileNames;
	ns1__getBucketFileNamesResponse ns1__getBucketFileNamesResponse_;
	ns1__getBucketFileNamesResponse_.soap_default(soap);
	soap_default___ns1__getBucketFileNames(soap, &soap_tmp___ns1__getBucketFileNames);
	if (!soap_get___ns1__getBucketFileNames(soap, &soap_tmp___ns1__getBucketFileNames, "-ns1:getBucketFileNames", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__getBucketFileNames(soap, soap_tmp___ns1__getBucketFileNames.ns1__getBucketFileNames_, ns1__getBucketFileNamesResponse_);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__getBucketFileNamesResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getBucketFileNamesResponse_.soap_put(soap, "ns1:getBucketFileNamesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getBucketFileNamesResponse_.soap_put(soap, "ns1:getBucketFileNamesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__doesFileExists(struct soap *soap)
{	struct __ns1__doesFileExists soap_tmp___ns1__doesFileExists;
	ns1__doesFileExistsResponse ns1__doesFileExistsResponse_;
	ns1__doesFileExistsResponse_.soap_default(soap);
	soap_default___ns1__doesFileExists(soap, &soap_tmp___ns1__doesFileExists);
	if (!soap_get___ns1__doesFileExists(soap, &soap_tmp___ns1__doesFileExists, "-ns1:doesFileExists", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__doesFileExists(soap, soap_tmp___ns1__doesFileExists.ns1__doesFileExists_, ns1__doesFileExistsResponse_);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__doesFileExistsResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__doesFileExistsResponse_.soap_put(soap, "ns1:doesFileExistsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__doesFileExistsResponse_.soap_put(soap, "ns1:doesFileExistsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__getFileMessage(struct soap *soap)
{	struct __ns1__getFileMessage soap_tmp___ns1__getFileMessage;
	ns1__getFileMessageResponse ns1__getFileMessageResponse_;
	ns1__getFileMessageResponse_.soap_default(soap);
	soap_default___ns1__getFileMessage(soap, &soap_tmp___ns1__getFileMessage);
	if (!soap_get___ns1__getFileMessage(soap, &soap_tmp___ns1__getFileMessage, "-ns1:getFileMessage", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__getFileMessage(soap, soap_tmp___ns1__getFileMessage.ns1__getFileMessage_, ns1__getFileMessageResponse_);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__getFileMessageResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getFileMessageResponse_.soap_put(soap, "ns1:getFileMessageResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getFileMessageResponse_.soap_put(soap, "ns1:getFileMessageResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__getFileDetail(struct soap *soap)
{	struct __ns1__getFileDetail soap_tmp___ns1__getFileDetail;
	ns1__getFileDetailResponse ns1__getFileDetailResponse_;
	ns1__getFileDetailResponse_.soap_default(soap);
	soap_default___ns1__getFileDetail(soap, &soap_tmp___ns1__getFileDetail);
	if (!soap_get___ns1__getFileDetail(soap, &soap_tmp___ns1__getFileDetail, "-ns1:getFileDetail", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__getFileDetail(soap, soap_tmp___ns1__getFileDetail.ns1__getFileDetail_, ns1__getFileDetailResponse_);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__getFileDetailResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getFileDetailResponse_.soap_put(soap, "ns1:getFileDetailResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getFileDetailResponse_.soap_put(soap, "ns1:getFileDetailResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__deleteOneFile(struct soap *soap)
{	struct __ns1__deleteOneFile soap_tmp___ns1__deleteOneFile;
	ns1__deleteOneFileResponse ns1__deleteOneFileResponse_;
	ns1__deleteOneFileResponse_.soap_default(soap);
	soap_default___ns1__deleteOneFile(soap, &soap_tmp___ns1__deleteOneFile);
	if (!soap_get___ns1__deleteOneFile(soap, &soap_tmp___ns1__deleteOneFile, "-ns1:deleteOneFile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__deleteOneFile(soap, soap_tmp___ns1__deleteOneFile.ns1__deleteOneFile_, ns1__deleteOneFileResponse_);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__deleteOneFileResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__deleteOneFileResponse_.soap_put(soap, "ns1:deleteOneFileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__deleteOneFileResponse_.soap_put(soap, "ns1:deleteOneFileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__deleteBatchFile(struct soap *soap)
{	struct __ns1__deleteBatchFile soap_tmp___ns1__deleteBatchFile;
	ns1__deleteBatchFileResponse ns1__deleteBatchFileResponse_;
	ns1__deleteBatchFileResponse_.soap_default(soap);
	soap_default___ns1__deleteBatchFile(soap, &soap_tmp___ns1__deleteBatchFile);
	if (!soap_get___ns1__deleteBatchFile(soap, &soap_tmp___ns1__deleteBatchFile, "-ns1:deleteBatchFile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__deleteBatchFile(soap, soap_tmp___ns1__deleteBatchFile.ns1__deleteBatchFile_, ns1__deleteBatchFileResponse_);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__deleteBatchFileResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__deleteBatchFileResponse_.soap_put(soap, "ns1:deleteBatchFileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__deleteBatchFileResponse_.soap_put(soap, "ns1:deleteBatchFileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__deleteFileByName(struct soap *soap)
{	struct __ns1__deleteFileByName soap_tmp___ns1__deleteFileByName;
	ns1__deleteFileByNameResponse ns1__deleteFileByNameResponse_;
	ns1__deleteFileByNameResponse_.soap_default(soap);
	soap_default___ns1__deleteFileByName(soap, &soap_tmp___ns1__deleteFileByName);
	if (!soap_get___ns1__deleteFileByName(soap, &soap_tmp___ns1__deleteFileByName, "-ns1:deleteFileByName", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__deleteFileByName(soap, soap_tmp___ns1__deleteFileByName.ns1__deleteFileByName_, ns1__deleteFileByNameResponse_);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__deleteFileByNameResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__deleteFileByNameResponse_.soap_put(soap, "ns1:deleteFileByNameResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__deleteFileByNameResponse_.soap_put(soap, "ns1:deleteFileByNameResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__uploadFile(struct soap *soap)
{	struct __ns1__uploadFile soap_tmp___ns1__uploadFile;
	ns1__uploadFileResponse ns1__uploadFileResponse_;
	ns1__uploadFileResponse_.soap_default(soap);
	soap_default___ns1__uploadFile(soap, &soap_tmp___ns1__uploadFile);
	if (!soap_get___ns1__uploadFile(soap, &soap_tmp___ns1__uploadFile, "-ns1:uploadFile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__uploadFile(soap, soap_tmp___ns1__uploadFile.ns1__uploadFile_, ns1__uploadFileResponse_);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__uploadFileResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__uploadFileResponse_.soap_put(soap, "ns1:uploadFileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__uploadFileResponse_.soap_put(soap, "ns1:uploadFileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__downLoadFile(struct soap *soap)
{	struct __ns1__downLoadFile soap_tmp___ns1__downLoadFile;
	ns1__downLoadFileResponse ns1__downLoadFileResponse_;
	ns1__downLoadFileResponse_.soap_default(soap);
	soap_default___ns1__downLoadFile(soap, &soap_tmp___ns1__downLoadFile);
	if (!soap_get___ns1__downLoadFile(soap, &soap_tmp___ns1__downLoadFile, "-ns1:downLoadFile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__downLoadFile(soap, soap_tmp___ns1__downLoadFile.ns1__downLoadFile_, ns1__downLoadFileResponse_);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__downLoadFileResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__downLoadFileResponse_.soap_put(soap, "ns1:downLoadFileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__downLoadFileResponse_.soap_put(soap, "ns1:downLoadFileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapServer.cpp */
